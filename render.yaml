services:
  # Frontend service
  - type: web
    name: fitgearhub-frontend
    env: node
    plan: free
    buildCommand: cd frontend && npm install && npm run build
    startCommand: cd frontend && npm start
    envVars:
      - key: NODE_ENV
        value: production

  # Backend service
  - type: web
    name: fitgearhub-backend
    env: python
    plan: free
    buildCommand: >
      cd backend && 
      pip install -r requirements.txt && 
      mkdir -p /opt/render/project/src/backend/media && 
      mkdir -p /opt/render/project/src/backend/media/products && 
      chmod -R 777 /opt/render/project/src/backend/media
    startCommand: >
      cd backend && 
      mkdir -p $RENDER_MOUNT_PATH/media && 
      mkdir -p $RENDER_MOUNT_PATH/media/products && 
      chmod -R 777 $RENDER_MOUNT_PATH/media && 
      python manage.py migrate --run-syncdb && 
      python manage.py runserver 0.0.0.0:$PORT
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: project_name.settings
      - key: DEBUG
        value: "0"
      - key: RENDER_MOUNT_PATH
        value: /opt/render/project/src/backend
    disk:
      name: fitgearhub-data
      mountPath: /opt/render/project/src/backend
      sizeGB: 1
      # Temporarily comment out DATABASE_URL to use SQLite instead
      # - key: DATABASE_URL
      #   fromDatabase:
      #     name: fitgearhub-db
      #     property: connectionString

# Temporarily comment out database definition until we create a new one
# databases:
#   - name: fitgearhub-db
#     plan: free
#     databaseName: fitgearhub