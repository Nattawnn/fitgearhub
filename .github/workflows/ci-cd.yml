name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run Django tests
      run: |
        cd backend
        python manage.py test
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm install
        
    - name: Run Next.js lint
      run: |
        cd frontend
        npm run lint

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose-plugin

    - name: Build and push Docker images
      run: |
        cd docker
        docker compose build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose-plugin

    - name: Deploy to production
      env:
        DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
        DOCKER_TLS_VERIFY: ${{ secrets.DOCKER_TLS_VERIFY }}
        DOCKER_CERT_PATH: ${{ secrets.DOCKER_CERT_PATH }}
      run: |
        cd docker
        docker compose -f docker-compose.prod.yml up -d
